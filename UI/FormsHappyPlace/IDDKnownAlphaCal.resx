<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolTip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="AlphaWeightTextBox.ToolTip" xml:space="preserve">
    <value>The (alpha, n) yield is calculated assuming the plutonium is pure oxide. The alpha weight is a weighting factor that can be used to adjust the calculated yield as needed. For pure oxide alpha weight is 1; for pure metal alpha weight is 0.</value>
  </data>
  <data name="RhoZeroTextBox.ToolTip" xml:space="preserve">
    <value>Rho-zero is doubles to singles ratio for a nonmultiplying item of pure Pu240. It is used in calculation of neutron multiplication and depends on detector parameters and electronics settings. Value is usually obtained from the detector manual.</value>
  </data>
  <data name="KTextBox.ToolTip" xml:space="preserve">
    <value>The constant k is used in the equation that determines neutron multiplication. It depends on the moments of the spontaneous fission neutron distributions of Pu240 and on the induced fission neutron distributions of Pu239. The default value is 2.166.</value>
  </data>
  <data name="ConventionalATextBox.ToolTip" xml:space="preserve">
    <value>Coefficient a is the intercept of the calibration curve D = a + bm, where D is the doubles rate corrected for multiplication and m is the effective Pu240 mass. It can be entered manually or obtained automatically from the Deming curve fitting option.</value>
  </data>
  <data name="ConventionalBTextBox.ToolTip" xml:space="preserve">
    <value>Coefficient b is the slope of the calibration curve D = bm, where D is the doubles rate corrected for multiplication and m is the effective Pu240 mass. It can be entered manually or obtained automatically from the Deming curve fitting option.</value>
  </data>
  <data name="CovarianceABTextBox.ToolTip" xml:space="preserve">
    <value>Calibration parameters can be entered manually, if known, or transferred automatically from Deming curve fitting option. Calibration curve is D = a + bm, where D is the doubles rate corrected for multiplication and m is the effective Pu240 mass.</value>
  </data>
  <data name="SigmaXTextBox.ToolTip" xml:space="preserve">
    <value>Sigma x is an extra error term for errors resulting from a mismatch between calibration standards and items measured. This error is combined quadratically with the other errors. Value of sigma x is determined from experience; if unknown, enter 0.</value>
  </data>
  <data name="HvyMetalRefTextBox.ToolTip" xml:space="preserve">
    <value>Heavy metal correction:\r\nSingles = sqrt (K4) * singles\r\nDoubles = K4 * doubles\r\nWhere: K4 = 1 + heavy metal weighting factor * (heavy metal reference - heavy metal content)\r\nWhere: Heavy metal content = (U + Pu) / length</value>
  </data>
  <data name="HvyMetalWeightingTextBox.ToolTip" xml:space="preserve">
    <value>Heavy metal correction:\r\nSingles = sqrt (K4) * singles\r\nDoubles = K4 * doubles\r\nWhere: K4 = 1 + heavy metal weighting factor * (heavy metal reference - heavy metal content)\r\nWhere: Heavy metal content = (U + Pu) / length\r\nSet to zero for no correction.</value>
  </data>
  <data name="LowerAlphaLimitTextBox.ToolTip" xml:space="preserve">
    <value>Enter the dry alpha or multiplication corrected doubles correction factor below which the calibration parameters are invalid. A correction factor below this value will have an out of calibration range warning message.</value>
  </data>
  <data name="UpperAlphaLimitTextBox.ToolTip" xml:space="preserve">
    <value>Enter the dry alpha or multiplication corrected doubles correction factor above which the calibration parameters are invalid. A correction factor above this value will have an out of calibration range warning message.</value>
  </data>
  <data name="MoistureATextBox.ToolTip" xml:space="preserve">
    <value>Calibration parameters must be entered manually. The calibration curve is usually RR = a + b * CF + c * CF^2 + d * CF^3, where RR  is the ring ratio (inner ring / outer ring) and CF is the correction factor applied to dry alpha or the multiplication corrected doubles rate.</value>
  </data>
  <data name="MoistureBTextBox.ToolTip" xml:space="preserve">
    <value>Calibration parameters must be entered manually. The calibration curve is usually RR = a + b * CF + c * CF^2 + d * CF^3, where RR  is the ring ratio (inner ring / outer ring) and CF is the correction factor applied to dry alpha or the multiplication corrected doubles rate.</value>
  </data>
  <data name="MoistureCTextBox.ToolTip" xml:space="preserve">
    <value>Calibration parameters must be entered manually. The calibration curve is usually RR = a + b * CF + c * CF^2 + d * CF^3, where RR  is the ring ratio (inner ring / outer ring) and CF is the correction factor applied to dry alpha or the multiplication corrected doubles rate.</value>
  </data>
  <data name="MoistureDTextBox.ToolTip" xml:space="preserve">
    <value>Calibration parameters must be entered manually. The calibration curve is usually RR = a + b * CF + c * CF^2 + d * CF^3, where RR  is the ring ratio (inner ring / outer ring) and CF is the correction factor applied to dry alpha or the multiplication corrected doubles rate.</value>
  </data>
</root>